tinytex::install_tinytex()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
setwd("C:/Users/FARIZA SHIELDA/Documents/File/Semester 3/Eksplorasi dan Visualisasi Data/Praktikum 2")
data = read.table("full_filled_stroke_data (1).csv", header=TRUE, sep=",")
head(data)
setwd("C:/Users/FARIZA SHIELDA/Documents/File/Semester 3/Eksplorasi dan Visualisasi Data/Praktikum 3")
data = read.table("full_filled_stroke_data (1).csv", header=TRUE, sep=",")
head(data)
library(ggplot2)
install.packages("readr")
library(readr)
vgsales<-read.csv("C:/Users/FARIZA SHIELDA/Documents/File/Semester 3/Eksplorasi dan Visualisasi Data/Praktikum 3")
library(readr)
vgsales<-read.csv("C:/Users/FARIZA SHIELDA/Documents/File/Semester 3/Eksplorasi dan Visualisasi Data/Praktikum 3")
setwd("C:/Users/FARIZA SHIELDA/Documents/File/Semester 3/Eksplorasi dan Visualisasi Data/Praktikum 3")
data = read.table("full_filled_stroke_data (1).csv", header=TRUE, sep=",")
head(data)
library(readr)
vgsales<-read.csv("C:/Users/FARIZA SHIELDA/Documents/File/Semester 3/Eksplorasi dan Visualisasi Data/Praktikum 3")
library(readr)
vgsales<-read.csv("C:/Users/FARIZA SHIELDA/Documents/File/Semester 3/Eksplorasi dan Visualisasi Data/Praktikum 3/full_filled_stroke_data (1).csv")
library(ggplot2)
ggplot(gender, aes(x= race))+geom_bar()
library(readr)
vgsales<-read.csv("C:/Users/FARIZA SHIELDA/Documents/File/Semester 3/Eksplorasi dan Visualisasi Data/Praktikum 3/full_filled_stroke_data (1).csv")
library(ggplot2)
ggplot(vgsales, aes(x= gender)) +
geom_bar()
ggplot(vgsales, aes(x= gender)) +
geom_bar(fill = "red")
ggplot(vgsales, aes(x= gender)) +
geom_bar(fill = "pink")
ggplot(vgsales, aes(x= gender)) +
geom_bar(fill = "pink",
color = "black")
ggplot(vgsales, aes(x= gender)) +
geom_bar(fill = "pink",
color = "black") +
labs(x = "Gender",
y = "Frekuensi",
title = "Sampel Berdasarkan Gender")
library(readr)
data<-read.csv("C:/Users/FARIZA SHIELDA/Documents/File/Semester 3/Eksplorasi dan Visualisasi Data/Praktikum 3/full_filled_stroke_data (1).csv")
library(ggplot2)
ggplot(vgsales, aes(x= gender)) +
geom_bar(fill = "pink",
color = "black") +
labs(x = "Gender",
y = "Frekuensi",
title = "Sampel Berdasarkan Gender")
ggplot(data, aes(x= gender)) +
geom_bar(fill = "pink",
color = "black") +
labs(x = "Gender",
y = "Frekuensi",
title = "Sampel Berdasarkan Gender")
ggplot(data, aes(x = age)) +
geom_histogram() +
labs(title = "Partisipan Berdasarkan Umur",
x = "Umur",
y = "Frekuensi")
ggplot(data, aes(x = age)) +
geom_histogram(fill = "purple") +
labs(title = "Partisipan Berdasarkan Umur",
x = "Umur",
y = "Frekuensi")
ggplot(data, aes(x = age)) +
geom_histogram(fill = "purple",
color = "black") +
labs(title = "Partisipan Berdasarkan Umur",
x = "Umur",
y = "Frekuensi")
ggplot(data, aes(x = age)) +
geom_histogram(fill = "purple",
color = "black",
bins = 10) +
labs(title = "Partisipan Berdasarkan Umur",
x = "Umur",
y = "Frekuensi")
ggplot(data, aes(x = age)) +
geom_histogram(fill = "purple",
color = "black",
bins = 20) +
labs(title = "Partisipan Berdasarkan Umur",
x = "Umur",
y = "Frekuensi")
ggplot(data, aes(x = bmi)) +
geom_dotplot(fill = "blue",
color = "black") +
labs(title = "Indeks Massa Tubuh",
x = "BMI",
y = "Proportion")
ggplot(data, aes(x = bmi)) +
geom_dotplot(fill = "blue",
color = "black",
binwidth = 5) +
labs(title = "Indeks Massa Tubuh",
x = "BMI",
y = "Proportion")
ggplot(data, aes(x = bmi)) +
geom_dotplot(fill = "blue",
color = "black",
binwidth = 1) +
labs(title = "Indeks Massa Tubuh",
x = "BMI",
y = "Proportion")
ggplot(data, aes(x = bmi)) +
geom_dotplot(fill = "blue",
color = "black",
binwidth = 10) +
labs(title = "Indeks Massa Tubuh",
x = "BMI",
y = "Proportion")
ggplot(data, aes(x = bmi)) +
geom_dotplot(fill = "blue",
color = "black",
binwidth = 0.5) +
labs(title = "Indeks Massa Tubuh",
x = "BMI",
y = "Proportion")
ggplot(data, aes(x = bmi)) +
geom_dotplot(fill = "blue",
color = "black",
binwidth = 0.2) +
labs(title = "Indeks Massa Tubuh",
x = "BMI",
y = "Proportion")
ggplot(data, aes(x = bmi)) +
geom_dotplot(fill = "blue",
color = "black",
binwidth = 0,4) +
labs(title = "Indeks Massa Tubuh",
x = "BMI",
y = "Proportion")
ggplot(data, aes(x = bmi)) +
geom_dotplot(fill = "blue",
color = "black",
binwidth = 0.4) +
labs(title = "Indeks Massa Tubuh",
x = "BMI",
y = "Proportion")
ggplot(data, aes(x = bmi)) +
geom_dotplot(fill = "blue",
color = "black",
binwidth = 0.35) +
labs(title = "Indeks Massa Tubuh",
x = "BMI",
y = "Proportion")
ggplot(plotdata,
aes(x = "",
y = prop,
fill = ever_married)) +
geom_bar(width = 1,
stat = "identity",
color = "black") +
coord_polar("y",
start = 0,
direction = -1) +
theme_void()
ggplot(plotdata,
aes(x = "",
y = prop,
fill = ever_married)) +
geom_bar(width = 1,
stat = "identity",
color = "black") +
coord_polar("y",
start = 0,
direction = -1) +
theme_void()
ggplot(plotdata,
aes(x = "",
y = prop,
fill = ever_married)) +
geom_bar(width = 1,
stat = "identity",
color = "black") +
coord_polar("y",
start = 0,
direction = -1) +
theme_void()
ggplot(data, aes(x = gender)) +
geom_bar(fill = "pink",
color = "black") +
labs(x = "Gender",
y = "Frekuensi",
title = "Sampel Berdasarkan Gender")
ggplot(data, aes(x = work_type)) +
geom_bar(fill = "light green",
color = "black") +
labs(x = "Jenis Pekerjaan",
y = "Frekuensi",
title = "Sampel Berdasarkan Jenis Pekerjaan")
ggplot(data, aes(x = work_type)) +
geom_bar(fill = "green",
color = "black") +
labs(x = "Jenis Pekerjaan",
y = "Frekuensi",
title = "Sampel Berdasarkan Jenis Pekerjaan")
ggplot(data, aes(x = work_type)) +
geom_bar(fill = "light green",
color = "black") +
labs(x = "Jenis Pekerjaan",
y = "Frekuensi",
title = "Sampel Berdasarkan Jenis Pekerjaan")
ggplot(data, aes(x = work_type)) +
geom_bar(fill = "green",
color = "black") +
labs(x = "Jenis Pekerjaan",
y = "Frekuensi",
title = "Sampel Berdasarkan Jenis Pekerjaan")
plotdata <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
plotdata <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 * prop)
plotdata <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 * prop)
plotdata <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 * prop)
ggplot(plotdata,
aes(x = "",
y = prop,
fill = ever_married)) +
geom_bar(width = 1,
stat = "identity",
color = "black") +
coord_polar("y",
start = 0,
direction = -1) +
theme_void()
ggplot(dataplot,
aes(x = "",
y = prop,
fill = ever_married)) +
geom_bar(width = 1,
stat = "identity",
color = "black") +
coord_polar("y",
start = 0,
direction = -1) +
theme_void()
ggplot(dataplot,
aes(x = "",
y = prop,
fill = ever_married)) +
geom_bar(width = 1,
stat = "identity",
color = "black") +
coord_polar("y",
start = 0,
direction = -1) +
theme_void()
dataplot <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
dataplot <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
library(ggplot2)
data = read.table("full_filled_stroke_data (1).csv", header=TRUE, sep=",")
head(data)
library(ggplot2)
dataplot <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
library(ggplot2)
dataplot <- data%>%
count(ever_married)%>%
arrange(desc(ever_married))%>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
library(ggplot2)
dataplot <- data %>%
count(ever_married) %>%
arrange(desc(ever_married))%>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
ggplot(dataplot,
aes(x = "",
y = prop,
fill = ever_married)) +
geom_bar(width = 1,
stat = "identity",
color = "black") +
coord_polar("y",
start = 0,
direction = -1) +
theme_void()
dataplot <- data %>%
count(ever_married) %>%
arrange(desc(ever_married))%>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
dataplot <- data,
dataplot <- data +
count(ever_married) +
arrange(desc(ever_married))+
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
install.packages("dplyr")
library(ggplot2)
dataplot <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
dataplot <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
library(dplyr)
dataplot <- data %>%
count(ever_married) %>%
arrange(desc(ever_married)) %>%
mutate(prop = round(n * 100 / sum(n), 1),
lab.ypos = cumsum(prop) - 0.5 *prop)
ggplot(dataplot,
aes(x = "",
y = prop,
fill = ever_married)) +
geom_bar(width = 1,
stat = "identity",
color = "black") +
coord_polar("y",
start = 0,
direction = -1) +
theme_void()
